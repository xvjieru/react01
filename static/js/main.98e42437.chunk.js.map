{"version":3,"sources":["01/Input.js","01/List.js","01/TodoList.js","index.js"],"names":["Input","props","value","inpValue","type","onChange","onClick","addTodo","List","arr1","length","renderTodos","arr2","TodoList","handleChange","e","setState","target","state","todos","title","done","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","key","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","this","setItem","Component","ReactDOM","render","document","getElementById"],"mappings":"6KAeeA,EAbD,SAACC,GACX,OACA,6BACM,2BACEC,MAAOD,EAAME,SACbC,KAAK,OACLC,SAAUJ,EAAMI,WAElB,4BAAQC,QAASL,EAAMM,SAAvB,kBCOKC,EAfF,SAACP,GACV,OACE,6BACE,uDAASA,EAAMQ,KAAKC,QACtB,4BACKT,EAAMU,aAAY,IAEvB,uDAASV,EAAMW,KAAKF,QACpB,4BACKT,EAAMU,aAAY,MC8EdE,E,kDApFX,aAAc,IAAD,8BACT,gBAMJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACb,SAASY,EAAEE,OAAOf,SARxB,EAwBbK,QAAU,WACoB,KAAvB,EAAKW,MAAMf,WAGd,EAAKa,SAAS,CACVG,MAAM,CACF,CACIC,MAAO,EAAKF,MAAMf,SAClBkB,MAAM,IAHT,mBAKE,EAAKH,MAAMC,UAGtB,EAAKH,SAAS,CAACb,SAAS,OArCf,EAwCbmB,QAAU,SAACC,GACP,EAAKP,SAAS,CACVG,MAAO,EAAKD,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAcA,IAAQH,QA1ChD,EA6CbI,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKb,MAAMC,QACpDS,EAASF,GAAOL,MAAQO,EAASF,GAAOL,KACxC,EAAKL,SAAS,CACVG,MAAOS,KAjDF,EAoDbjB,YAAc,SAACU,GACX,OAAO,EAAKH,MAAMC,MAAMa,KAAI,SAACC,EAAKV,GAC9B,GAAGF,IAASY,EAAKZ,KACb,OAAO,wBAAIa,IAAKX,GACZ,2BACIlB,SAAU,kBAAI,EAAKsB,OAAOJ,IAC1BY,QAASd,EACTjB,KAAK,aAET,0BAAMgC,wBAAyB,CAACC,OAAOJ,EAAKb,SAC5C,4BACId,QAAS,kBAAI,EAAKgB,QAAQC,KAD9B,qBA5DZ,EAAKL,MAAQ,CACTf,SAAU,GACVgB,MAAM,IAJD,E,gEAWT,IAAIA,EAAQmB,aAAaC,QAAQ,SAC9BpB,GACCqB,KAAKxB,SAAS,CACVG,MAAOU,KAAKC,MAAMX,O,2CAK1BmB,aAAaG,QACT,QACAZ,KAAKE,UAAUS,KAAKtB,MAAMC,U,+BAkDxB,IAAD,EACoBqB,KAAKtB,MAAvBC,EADF,EACEA,MACHV,GAFC,EACQN,SACFgB,EAAMK,QAAQ,SAAAC,GAAI,OAAKA,EAAKJ,SACnCT,EAAOO,EAAMK,QAAQ,SAAAC,GAAI,OAAIA,EAAKJ,QACtC,OACK,kBAAC,WAAD,KACG,kBAAC,EAAD,CAAOlB,SAAUqC,KAAKtB,MAAMf,SAAUE,SAAUmC,KAAK1B,aAAcP,QAASiC,KAAKjC,UACjF,kBAAC,EAAD,CAAMI,YAAa6B,KAAK7B,YAAaF,KAAMA,EAAMG,KAAMA,EAAMP,SAAUmC,KAAKb,c,GA/ErEe,aCAvBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.98e42437.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props)=>{\r\n    return (\r\n    <div>\r\n          <input \r\n            value={props.inpValue} \r\n            type=\"text\" \r\n            onChange={props.onChange}\r\n          />\r\n          <button onClick={props.addTodo}>添加</button>\r\n    </div>\r\n    )\r\n    \r\n}\r\nexport default Input;","import React from 'react';\n\nconst List = (props)=>{\n    return(\n      <div> \n        <h2>正在进行{props.arr1.length}</h2>\n      <ul>\n          {props.renderTodos(false)}\n      </ul>\n      <h2>已经完成{props.arr2.length}</h2>\n      <ul>\n          {props.renderTodos(true)}\n      </ul>   \n    </div>  \n    )\n}\n\nexport default List;","import React, { Component,Fragment } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue ===''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!==idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done === todo.done){\r\n                return <li key={idx}>\r\n                    <input \r\n                        onChange={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {   \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done)\r\n        let arr2 = todos.filter( item => item.done)\r\n        return (\r\n             <Fragment>\r\n                <Input inpValue={this.state.inpValue} onChange={this.handleChange} addTodo={this.addTodo} />\r\n                <List renderTodos={this.renderTodos} arr1={arr1} arr2={arr2} onChange={this.toggle}/>\r\n            </Fragment>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './01/TodoList'\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n\n\n  \n\n\n"],"sourceRoot":""}